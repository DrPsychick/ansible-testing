---
- name: Ensure target directory exists
  ansible.builtin.file:
    path: "{{ work_dir }}/scripts"
    state: directory
    mode: 0755

- name: Download PowerShell upgrade script
  ansible.builtin.get_url:
    url: "{{ libvirt_upgrade_powershell_url }}"
    dest: "{{ work_dir }}/scripts/upgrade-powershell.ps1"
    mode: 0644
  register: upgrade_powershell

- name: Download WinRM hotfix script
  ansible.builtin.get_url:
    url: "{{ libvirt_winrm_hotfix_url }}"
    dest: "{{ work_dir }}/scripts/winrm-hotfix.ps1"
    mode: 0644
  register: winrm_hotfix

- name: Create virtual machines
  ansible.builtin.include_tasks: create_virtual_machine.yml
  vars:
    instance: "{{ outer_instance }}"
  with_items: "{{ virtual_machines }}"
  loop_control:
    loop_var: "outer_instance"

- name: Wait to get virtual machine IPs
  ansible.builtin.shell: |
    set -o pipefail
    virsh domifaddr {{ item }} | grep 'ipv4' | awk '{print $4}' | awk -F/ '{print $1}'
  register: vm_ips
  become: true
  become_user: root
  with_items: "{{ virtual_machine_inventory }}"
  changed_when: false
  failed_when: not vm_ips.stdout | regex_search('[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
  # wait up to 5 minutes
  retries: 30
  delay: 10
  until: vm_ips is not failed
  tags:
    - skip_ansible_lint

- name: Add IPs to inventory
  ansible.builtin.set_fact:
    virtual_machine_inventory: "{{ virtual_machine_inventory | combine(
      { item.item: { 'ip': item.stdout } }, recursive=True
    ) }}"
  with_items: "{{ vm_ips.results }}"

- name: Wait (up to 10 min) for virtual machines WinRM to be reachable
  ansible.builtin.wait_for:
    host: "{{ virtual_machine_inventory[item].ip }}"
    port: 5985
    state: started
    timeout: 600
  register: winrm_check
  with_items: "{{ virtual_machine_inventory }}"

- name: Wait for successful WinRM command
  ansible.builtin.uri:
    url: "http://{{ virtual_machine_inventory[item].ip }}:5985/wsman"
    method: POST
    headers:
      Content-Type: application/soap+xml;charset=UTF-8
    force_basic_auth: true
    url_username: Administrator
    url_password: "{{ virtual_machine_inventory[item].password }}"
    body: |
      <s:Envelope
            xmlns:s="http://www.w3.org/2003/05/soap-envelope"
            xmlns:a="http://schemas.xmlsoap.org/ws/2004/08/addressing"
            xmlns:w="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd">
        <s:Header>
          <a:To>http://{{ virtual_machine_inventory[item].name }}:5985/wsman</a:To>
          <w:ResourceURI s:mustUnderstand="true">
            http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk
          </w:ResourceURI>
          <a:ReplyTo>
          <a:Address s:mustUnderstand="true">
            http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous
          </a:Address>
          </a:ReplyTo>
          <a:Action s:mustUnderstand="true">
            http://schemas.xmlsoap.org/ws/2004/09/transfer/Get
          </a:Action>
          <w:MaxEnvelopeSize s:mustUnderstand="true">153600</w:MaxEnvelopeSize>
          <a:MessageID>uuid:4ED2993C-4339-4E99-81FC-C2FD3812781A</a:MessageID>
          <w:Locale xml:lang="en-US" s:mustUnderstand="false"/>
          <w:SelectorSet>
            <w:Selector Name="DeviceId">c:</w:Selector>
          </w:SelectorSet>
          <w:OperationTimeout>PT60.000S</w:OperationTimeout>
        </s:Header>
        <s:Body/>
      </s:Envelope>
    status_code: 200
    return_content: true
  register: winrm_login
  retries: 20
  delay: 10
  until: winrm_login is not failed
  with_items: "{{ virtual_machine_inventory }}"

- name: Generate virsh inventory
  ansible.builtin.copy:
    dest: "{{ work_dir }}/virsh_inventory"
    mode: 0644
    content: |
      all:
        hosts:
      {% for instance in virtual_machine_inventory %}
          {{ instance }}:
            ansible_host: {{ virtual_machine_inventory[instance].ip }}
            ansible_connection: 'winrm'
            ansible_wirm_transport: 'basic'
            ansible_user: 'Administrator'
            ansible_password: '{{ virtual_machine_inventory[instance].password }}'
            ansible_port: 5985
      {% endfor %}
